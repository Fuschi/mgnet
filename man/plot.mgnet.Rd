% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-mgnet.R
\name{plot.mgnet}
\alias{plot.mgnet}
\title{plot.mgnet}
\usage{
\method{plot}{mgnet}(
  x,
  layout,
  vertexSize = "mean-log",
  expFactor = 1,
  multConst = 1,
  sumConst = 0,
  thickness = TRUE,
  alphaFactor = 0.5,
  widthFactor = 1,
  posCol = rgb(0, 0, 1),
  negCol = rgb(1, 0, 0),
  maxSize = NULL,
  maxWidth = NULL,
  ...
)
}
\arguments{
\item{x}{mgnet object}

\item{layout}{vertices layout in igraph style. If missing it is applied the layout_signed.}

\item{vertexSize}{numeric or character indicated the size of the vertices. If
is character the variable can assumes the two values 'log-mean' or 'var-mean' and
where the vertices sizes are taken from the colMeans or from the columns variance of
the log_data slot. Otherwise if vertexSize is numeric the vertices scales as received.}

\item{expFactor}{numeric value and It tune the difference in size between the smaller and the higher sizes of vertices.}

\item{multConst}{numeric positive applied to all the vertices size as multiplicative factor.}

\item{sumConst}{numeric positive summed to all vertices size.}

\item{thickness}{logical that it scale the width of the edges using the its weights in absolute values.}

\item{alphaFactor}{numeric in range [0,1] and it modify the alpha trasparency of edges color.}

\item{widthFactor}{numeric positive value that scale the width of all edges.}

\item{posCol}{rgb color for positive edges.}

\item{negCol}{rgb color for negative edges.}

\item{maxSize}{numeric positive integer with default NULL value. If it is set
re-scale all the vertices size in order to obtain the larger vertices with the
size equal to maxSize.}

\item{maxWidth}{numeric positive integer with default NULL value. If it is set
re-scale all the edges width in order to obtain the larger edge with the
width equal to maxWidth.}

\item{...}{additional arguments to be passed to igraph plot of the network}
}
\description{
Plot network belonging to a mgnet object. The function focus on characterize
the signed properties of the edges, color them and placing the vertices considering
only the positive ones. Furthermore it permits to tune some graphical aspects
of the nodes and of the edges. At vertex.size, named \eqn{v_0}, of the graph is applied
the following function:
\deqn{v=\text{\footnotesize{sumConst}}+\text{\footnotesize{multConst}}\left(\text{\footnotesize{max}}(v_0)\left(\frac{v_0}{\text{\footnotesize{max}}(v_0)}\right)^{\text{expFactor}}\right)}
}

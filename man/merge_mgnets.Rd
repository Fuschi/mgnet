% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/4e_classes_merge.R
\name{merge_mgnets}
\alias{merge_mgnets}
\title{Merge Multiple \code{mgnet} or \code{mgnetList} Objects}
\usage{
merge_mgnets(
  ...,
  abun = NULL,
  rela = NULL,
  norm = NULL,
  meta = NULL,
  taxa = NULL,
  netw = NULL,
  comm = NULL
)
}
\arguments{
\item{...}{\code{mgnet} objects, \code{mgnetList} objects, or lists of such objects to be merged.}

\item{abun}{A function to merge the 'abun' (abundance) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}

\item{rela}{A function to merge the 'rela' (relative abundance) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}

\item{norm}{A function to merge the 'norm' (normalized abundance) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}

\item{meta}{A function to merge the 'meta' (metadata) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}

\item{taxa}{A function to merge the 'taxa' (taxonomic data) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}

\item{netw}{A function to merge the 'netw' (network) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}

\item{comm}{A function to merge the 'comm' (community structure) slots from the provided \code{mgnet} objects, or \code{NULL} if no merging is required for this slot.}
}
\value{
A new \code{mgnet} or \code{mgnetList} object containing the merged data from the input objects. Each slot of the returned object is the result of the merging function applied to that slot, or remains \code{NULL} if no function was specified for that slot.
}
\description{
Merges multiple \code{mgnet} or \code{mgnetList} objects into a single \code{mgnet} or \code{mgnetList} object by merging their respective slots according to user-specified functions. This method provides flexibility to define how each slot is combined, which is essential because a default merging behavior for such complex data structures is not feasible.
}
\details{
The function allows specifying custom merging strategies for each slot:
\itemize{
\item \strong{Abundance data (\code{abun})}: Functions like \code{dplyr::bind_cols} or \code{dplyr::bind_rows} might be appropriate.
\item \strong{Metadata (\code{meta})}: Merging can be handled by functions such as \code{dplyr::full_join} or \code{dplyr::bind_rows}.
\item \strong{Network structures (\code{netw})}: These might be combined using \code{igraph::union} or similar graph-specific functions.
This approach ensures flexibility in handling the complex and varied data stored within \code{mgnet} objects.
}

The method checks for consistency among \code{mgnetList} objects. If merging \code{mgnetList} objects, it first ensures that all have identical names in the 'mgnets' slot. Mismatched names will cause the function to stop and issue an error.
}
\examples{
\dontrun{
  # Assuming mg1 and mg2 are mgnet objects
  merged_mgnet <- merge_mgnets(mg1, mg2, abun = rbind)
  # For merging mgnetList objects with custom functions for each slot
  merged_list <- merge_mgnets(list1, list2, 
                              meta = function(x) dplyr::bind_rows(x),
                              netw = igraph::graph.union)
}
}
